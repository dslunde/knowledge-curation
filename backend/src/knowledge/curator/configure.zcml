<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:plone="http://namespaces.plone.org/plone"
    i18n_domain="knowledge.curator"
    >

  <i18n:registerTranslations directory="locales" />

  <!--
    Be careful if you use general includeDependencies, it can have side effects!
    Better import explicit packages or configurations ;)
  -->
  <!--<includeDependencies package="." />-->

  <include package=".browser" />
  <include package=".content" />
  <include package=".behaviors" />
  <include package=".viewlets" />
  <include package=".portlets" />
  <include package=".indexers" />
  <include package=".vocabularies" />
  <include package=".upgrades" />
  <include package=".api" />
  <include package=".vector" />
  <include package=".repetition" />
  <include package=".graph" />

  <include file="permissions.zcml" />

  <genericsetup:registerProfile
      name="default"
      title="Knowledge Curator"
      description="Installs the Knowledge Curator add-on."
      provides="Products.GenericSetup.interfaces.EXTENSION"
      directory="profiles/default"
      post_handler=".setuphandlers.post_install"
      />

  <genericsetup:registerProfile
      name="uninstall"
      title="Knowledge Curator (uninstall)"
      description="Uninstalls the Knowledge Curator add-on."
      provides="Products.GenericSetup.interfaces.EXTENSION"
      directory="profiles/uninstall"
      post_handler=".setuphandlers.uninstall"
      />

  <utility
      factory=".setuphandlers.HiddenProfiles"
      name="knowledge.curator-hiddenprofiles"
      />

  <!-- -*- extra stuff goes here -*- -->

  <!-- Workflow Event Subscribers -->
  <subscriber
      for="knowledge.curator.content.knowledge_item.IKnowledgeItem
           Products.CMFCore.interfaces.IActionSucceededEvent"
      handler=".workflow_events.knowledge_item_workflow_changed"
      />

  <subscriber
      for="knowledge.curator.interfaces.ILearningGoal
           Products.CMFCore.interfaces.IActionSucceededEvent"
      handler=".workflow_events.learning_goal_workflow_changed"
      />

</configure>
