name: Manual Deployment of knowledge-curator.lundandco.net

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: false
        default: 'knowledge-curator.lundandco.net'
        type: string

env:
  DEFAULT_ENVIRONMENT: 'knowledge-curator.lundandco.net'

jobs:

  meta:
    runs-on: ubuntu-latest
    outputs:
      ENVIRONMENT: ${{ steps.vars.outputs.ENVIRONMENT }}
      STACK_NAME: ${{ steps.vars.outputs.STACK_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Env Vars
        id: vars
        env:
          LIVE_ENV: ${{ vars.LIVE_ENV }}
          INPUT_ENVIRONMENT: ${{ github.event.inputs.environment }}
        run: |
          # Use workflow input, fallback to vars.LIVE_ENV, or use default
          if [ -n "${INPUT_ENVIRONMENT}" ]; then
            ENVIRONMENT="${INPUT_ENVIRONMENT}"
          elif [ -n "${LIVE_ENV}" ]; then
            ENVIRONMENT="${LIVE_ENV}"
          else
            ENVIRONMENT="${DEFAULT_ENVIRONMENT}"
          fi
          echo "ENVIRONMENT=${ENVIRONMENT}" >> $GITHUB_OUTPUT
          echo "STACK_NAME=${ENVIRONMENT//./-}" >> $GITHUB_OUTPUT

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - meta
    runs-on: ubuntu-latest
    environment: ${{ needs.meta.outputs.ENVIRONMENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate deployment secrets
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_SSH: ${{ secrets.DEPLOY_SSH }}
        run: |
          if [ -z "${DEPLOY_HOST}" ]; then
            echo "::error::DEPLOY_HOST secret is not configured"
            exit 1
          fi
          if [ -z "${DEPLOY_USER}" ]; then
            echo "::error::DEPLOY_USER secret is not configured"
            exit 1
          fi
          if [ -z "${DEPLOY_SSH}" ]; then
            echo "::error::DEPLOY_SSH secret is not configured"
            exit 1
          fi

      - name: Set deployment parameters
        id: deploy-params
        env:
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
          ENV_FILE: ${{ secrets.ENV_FILE }}
        run: |
          echo "remote_port=${DEPLOY_PORT:-22}" >> $GITHUB_OUTPUT
          echo "env_file=${ENV_FILE}" >> $GITHUB_OUTPUT

      - name: Deploy to cluster
        uses: kitconcept/docker-stack-deploy@v1.2.0
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_port: ${{ steps.deploy-params.outputs.remote_port }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_private_key: ${{ secrets.DEPLOY_SSH }}
          stack_file: devops/stacks/${{ needs.meta.outputs.ENVIRONMENT }}.yml
          stack_name: ${{ needs.meta.outputs.STACK_NAME }}
          stack_param: ${{ github.ref_name }}
          env_file: ${{ steps.deploy-params.outputs.env_file }}
          deploy_timeout: 480
